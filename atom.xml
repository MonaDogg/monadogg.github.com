<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[MonaDogg's blog]]></title>
  <link href="http://MonaDogg.github.io/atom.xml" rel="self"/>
  <link href="http://MonaDogg.github.io/"/>
  <updated>2013-11-18T21:38:53+08:00</updated>
  <id>http://MonaDogg.github.io/</id>
  <author>
    <name><![CDATA[MonaDogg]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[越狱开发相关笔记]]></title>
    <link href="http://MonaDogg.github.io/blog/2013/11/18/jailbreaknote01/"/>
    <updated>2013-11-18T13:06:00+08:00</updated>
    <id>http://MonaDogg.github.io/blog/2013/11/18/jailbreaknote01</id>
    <content type="html"><![CDATA[<h1>1准备工具</h1>

<h2>1安装iOS sdk</h2>

<p>Step1:安装iOS SDK。
<a href="http://developer.apple.com/devcenter/ios/index.action">http://developer.apple.com/devcenter/ios/index.action</a></p>

<h2>2下载theos</h2>

<p>可以简单理解theos为越狱开发的环境</p>

<pre>
export THEOS=/opt/theos
//设置环境变量
svn co http://svn.howett.net/svn/theos/trunk $THEOS
//svn下载相关内容到位置
</pre>


<p>可以使用下列语句打印看看:</p>

<pre>
echo $THEOS
</pre>


<h2>3下载ldid</h2>

<p>ldid的功能是给app签名</p>

<p>下载并解压到桌面上:
<a href="http://cloud.github.com/downloads/rpetrich/ldid/ldid.zip">http://cloud.github.com/downloads/rpetrich/ldid/ldid.zip</a></p>

<pre>
chmod +x ~/Desktop/ldid
//设置ldid可以执行的权限

mv ~/Desktop/ldid $THEOS/bin/ldid
//将ldid移动到指定的位置
</pre>


<h2>4安装dpkg</h2>

<p>dpkg的作用是将你的app打包为debian paceage.</p>

<pre>
sudo port install dpkg
</pre>


<h2>5创建一个新的项目</h2>

<p>theos使用一个叫做nic(new instance tool)的工具来创建新的工程。执行下面的命令：</p>

<pre>
$THEOS/bin/nic.pl
</pre>


<p>就可以开始创建。下面是一个创建jailbroken 应用程序的例子：</p>

<pre>
author$ $THEOS/bin/nic.pl
NIC 1.0 - New Instance Creator
——————————
  [1.] iphone/application
  [2.] iphone/library
  [3.] iphone/preference_bundle
  [4.] iphone/tool
  [5.] iphone/tweak
Choose a Template (required): 1
Project Name (required): firstdemo
Package Name [com.yourcompany.firstdemo]: 
Author/Maintainer Name [Author Name]: 
Instantiating iphone/application in firstdemo/…
Done.
</pre>


<p>这样就会在当前目录下创建一个名为fistdemo的文件夹</p>

<h2>6生成文件说明</h2>

<p>1.control: 包含applicaton/tweak的信息，当你从Cydia安装时，你可以看到这些信息，包括名字，作者，版本，等等。</p>

<p>2.main.m，程序启动的入口.</p>

<p>3.firstDemoApplication:app的代理文件类</p>

<p>4.Makefile：包含必要的编译命令</p>

<p>5.Resources：包含info.plist文件等</p>

<p>6.RootViewController.h/mm :根vc</p>

<p>其中Makefile的内容为:</p>

<pre>
include theos/makefiles/common.mk

APPLICATION_NAME = firstDemo
firstDemo_FILES = main.m firstDemoApplication.mm RootViewController.mm
firstDemo_FRAMEWORKS = UIKit CoreGraphics

include $(THEOS_MAKE_PATH)/application.mk

</pre>


<h2>7重新设置环境变量</h2>

<p>设置下列环境变量:环境位置,sdk版本,设备ip地址.</p>

<pre>
export THEOS=/opt/theos/
export SDKVERSION=7.0
export THEOS_DEVICE_IP=xxx.xxx.xxx.xxx
</pre>


<h2>8构建工程</h2>

<p><strong>1.make</strong></p>

<pre>
$ make
Making all for application firstdemo…
 Compiling main.m…
 Compiling firstdemoApplication.mm…
 Compiling RootViewController.mm…
 Linking application firstdemo…
 Stripping firstdemo…
 Signing firstdemo…
</pre>


<p><strong>2.make package</strong></p>

<pre>
make package
Making all for application firstdemo…
make[2]: Nothing to be done for ‘internal-application-compile’.
Making stage for application firstdemo…
 Copying resource directories into the application wrapper…
dpkg-deb: building package ‘com.yourcompany.firstdemo’ in ‘/Users/author/Desktop/firstdemo/com.yourcompany.firstdemo_0.0.1-1_iphoneos-arm.deb’.
</pre>


<p><strong>3.make install</strong></p>

<pre>
$ make package install
Making all for application firstdemo…
make[2]: Nothing to be done for `internal-application-compile’.
Making stage for application firstdemo…
 Copying resource directories into the application wrapper…
dpkg-deb: building package ‘com.yourcompany.firstdemo’ in ‘/Users/author/Desktop/firstdemo/com.yourcompany.firstdemo_0.0.1-1_iphoneos-arm.deb’.
...
root@ip’s password: 
...
</pre>


<p>这个过程会提示你输入几次iphone或者ipad的密码。默认是:alpine.</p>

<p><strong>参考资料</strong></p>

<p>1.<a href="http://wufawei.com/2013/08/iOS-jailbroken-programming-1/">http://wufawei.com/2013/08/iOS-jailbroken-programming-1/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[持续更新]git常用命令]]></title>
    <link href="http://MonaDogg.github.io/blog/2013/11/16/gitchang-yong-ming-ling/"/>
    <updated>2013-11-16T22:35:00+08:00</updated>
    <id>http://MonaDogg.github.io/blog/2013/11/16/gitchang-yong-ming-ling</id>
    <content type="html"><![CDATA[<p>如果读者想成git高手,本文也许并不适合你,我在这里推荐一本书为&lt;Git权威指南>,这本书会介绍git的方方面面,如果读者是一位并不清楚git基础知识的读者,那么建议读者先从文章末尾的推荐阅读的资料开始学习git.本文主要记载日常使用git中常用的命令,并尽量讲清楚使用该命令的使用场景.</p>

<h1>1.本地操作</h1>

<h2>1.1初始化</h2>

<h3>1.1.1全局变量</h3>

<p>git config &mdash;global user.name &ldquo;xxx&rdquo;</p>

<p>git config &mdash;global user.email &ldquo;<a href="&#x6d;&#97;&#x69;&#x6c;&#x74;&#111;&#58;&#x78;&#x78;&#x78;&#x40;&#113;&#x71;&#x2e;&#99;&#111;&#x6d;">&#x78;&#120;&#120;&#64;&#113;&#113;&#x2e;&#99;&#x6f;&#x6d;</a>&rdquo;</p>

<p>git config &mdash;global color.ui &ldquo;always&rdquo;</p>

<h3>1.1.2初始化新版本库</h3>

<p>git init 只会在根目录下建立一个名为.git文件夹</p>

<h3>1.1.3设置忽略的文件</h3>

<p><strong>1.设置每个人都需要忽略的文件</strong></p>

<p>1)在根目录新建一个名为.gitignore的文本文件</p>

<p>2)在命令行执行echo *.jpg>.gitignore,注意>左右不要有空格</p>

<p>3)将.gitignore文件加入版本库并提交</p>

<p><strong>2.设置只有自己忽略的文件</strong></p>

<p>1)修改.git/info/exclude文件</p>

<p>2)可以使用正则表达式,例如*.[oa]等价于*.o和*.a</p>

<h3>1.1.4添加文件到版本库</h3>

<p><strong>1.添加单个文件</strong></p>

<p>git add somefile.tet</p>

<p><strong>2.添加所有txt文件</strong></p>

<p>git add *.txt</p>

<p><strong>3.添加所有文件</strong></p>

<p>git add . 包含子目录但是不包含空目录</p>

<h3>1.1.5提交</h3>

<p><strong>1.提交</strong></p>

<p>git commit -m &ldquo;add all files&rdquo;</p>

<h2>1.2日常操作</h2>

<h3>1.2.1提交</h3>

<p><strong>1.提交所有修改</strong></p>

<p>git commit -m &ldquo;some message&rdquo; -a</p>

<p><strong>2.提交单个文件</strong></p>

<p>git commit -m &ldquo;some message&rdquo; readMe.txt</p>

<p><strong>3.增补提交</strong></p>

<p>git commit -C head -a -amend</p>

<p>不会产生新的提交历史记录</p>

<h3>1.2.2撤销修改</h3>

<p><strong>1.撤销尚未提交的修改</strong></p>

<p>1)撤销少量文件</p>

<p>git checkout head readMe.txt toDo.txt</p>

<p>2)撤销所有txt文件</p>

<p>git checkout head *.txt</p>

<p>3)撤销所有文件</p>

<p>git checkout head</p>

<p><strong>2.撤销提交后的修改</strong></p>

<p>1)撤销某次提交,但是这次操作也会作为一次提交保存</p>

<p>git revert -no-commit head</p>

<p>2)复位,将当前head内容重置不会留下痕迹</p>

<p>git reset head/git reset head<filename></p>

<p>3)复位到head之前的版本,不会在版本库留下痕迹</p>

<p>git reset &mdash;hard head^</p>

<p>4)永久删除最后3个commit(即HEAD, HEAD^和HEAD~2)</p>

<p>git reset &mdash;hard head~3</p>

<h3>1.2.3分支</h3>

<h3>1.2.4解决冲突</h3>

<h3>1.2.5标签</h3>

<h3>1.2.6查看状态</h3>

<h3>1.2.7其他</h3>

<h1>2.远程操作</h1>

<h2>2.1初始化</h2>

<h2>2.2日常操作</h2>

<h2>2.3github</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[常用unix命令]]></title>
    <link href="http://MonaDogg.github.io/blog/2013/11/15/chi-xu-geng-xin-maczhong-duan-chang-yong-ming-ling/"/>
    <updated>2013-11-15T16:59:00+08:00</updated>
    <id>http://MonaDogg.github.io/blog/2013/11/15/chi-xu-geng-xin-maczhong-duan-chang-yong-ming-ling</id>
    <content type="html"><![CDATA[<h3>1.列出文件</h3>

<p>ls 参数 目录名</p>

<h3>2.转换目录</h3>

<p>cd</p>

<h3>3.建立新目录</h3>

<p>mkdir 目录名
mkdir /User/用户名/Desktop/backup</p>

<h3>4.拷贝文件</h3>

<p>cp 参数 源文件 目标文件
把驱动目录下的所有文件备份到桌面backup
cp -R /System/Library/Extensions/* /User/用户名/Desktop/backup</p>

<h3>5.删除文件</h3>

<p>rm 参数 文件
rm -rf /System/Library/Extensions.kextcache
参数－rf 表示递归和强制，千万要小心使用，如果执行了 rm -rf / 你的系统就全没了</p>

<h3>6.移动文件</h3>

<p>mv 文件
例：想把AppleHDA.Kext 移到桌面
mv /System/Library/Extensions/AppleHDA.kext /User/用户名/Desktop</p>

<h3>7.文本编辑</h3>

<p>nano 文件名<br/>
vim 文件名</p>

<h3>8.删除一个目录</h3>

<p>rmdir dirname</p>

<h3>9.移动或重命名一个目录</h3>

<p>mvdir dir1 dir2</p>

<h3>10.显示当前目录的路径名</h3>

<p>pwd</p>

<h3>11.生成一个新文件</h3>

<p>touch readMe.txt</p>

<h3>12.重复上次的命令</h3>

<p>!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[今天开始搭建完成了github博客]]></title>
    <link href="http://MonaDogg.github.io/blog/2013/11/15/jin-tian-kai-shi-da-jian-wan-cheng-liao-githubbo-ke/"/>
    <updated>2013-11-15T16:17:00+08:00</updated>
    <id>http://MonaDogg.github.io/blog/2013/11/15/jin-tian-kai-shi-da-jian-wan-cheng-liao-githubbo-ke</id>
    <content type="html"><![CDATA[<p>今天完成了github的博客搭建,现在记录下载大家过程中遇到的困难.</p>
]]></content>
  </entry>
  
</feed>
