<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | MonaDogg]]></title>
  <link href="http://MonaDogg.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://MonaDogg.github.io/"/>
  <updated>2013-12-03T14:17:36+08:00</updated>
  <id>http://MonaDogg.github.io/</id>
  <author>
    <name><![CDATA[MonaDogg]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AKTabBarController笔记]]></title>
    <link href="http://MonaDogg.github.io/blog/2013/12/03/aktabbarcontrollerbi-ji/"/>
    <updated>2013-12-03T11:13:00+08:00</updated>
    <id>http://MonaDogg.github.io/blog/2013/12/03/aktabbarcontrollerbi-ji</id>
    <content type="html"><![CDATA[<p>因为项目的需要定义tabbar,无奈iOS默认的tabbar难以达到我们的要求,于是乎我再github上发现了AKTabBarController,其可以定制的样式用庞大来形容也不为过,经过半天的远源码研究,觉得这个小项目设计的十分友好,所以我将一些心得体会书写如下:</p>

<p>1.AKTabbarController 是用来控制所有所有view的展示关系(例如tabbar,contentview什么时候展示,展示何种样式),并且初始化AKTabbarView,并将其展示在view上.此处还实现了代理方法,根据点击展示不同的view到contentview上.</p>

<p>2.AKTabbarView包含,AKTabbar以及contentview,用来展示tabbar的不同形态和contentview的不同形态.其供controller调用,用于展示不同的效果,例如tab被选中,或者contentview被推送,但是其并不直到发生了什么,只是按照要求展示内容.</p>

<p>3.AKTabbar是tabbar的整体,包含多个AKTab及其分割线等东西.用于展示tabbar的整体,通过设置其属性tabs(一个AKTab的数组),调用 setNeedsLayout,来间接调用layoutSubviews计算各个tab的frame,通过调用setNeedsDisplay间接点用drawRect将所有tab和分割线等东西绘制再屏幕上.此处还为每个tab添加了action,并且定义了delegate,让tab被点击的时候调用代理方法.</p>

<p>4.AKTab是每个具体的tab样式和行为,根据属性进行绘制tab上的内容,将背景和内容分为两个方法进行绘制.</p>

<p>5.使用category设置vc,nvc等vc在tabbar上的titile和image,这里用的很巧妙.
但是这些设置有些太多,太细已经超过我的预期,所以我准备编写另一个适合自己的可定制的tabbar.</p>
]]></content>
  </entry>
  
</feed>
